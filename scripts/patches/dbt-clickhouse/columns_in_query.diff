diff --git a/dbt/adapters/clickhouse/httpclient.py b/dbt/adapters/clickhouse/httpclient.py
index 17795e4..4a206fe 100644
--- a/dbt/adapters/clickhouse/httpclient.py
+++ b/dbt/adapters/clickhouse/httpclient.py
@@ -25,7 +25,7 @@ class ChHttpClient(ChClientWrapper):
 
     def columns_in_query(self, sql: str, **kwargs) -> List[ClickHouseColumn]:
         try:
-            query_result = self._client.query(f"SELECT * FROM ({sql}) LIMIT 0", **kwargs)
+            query_result = self._client.query(f"SELECT * FROM ({sql}) WHERE FALSE LIMIT 0", **kwargs)
             return [
                 ClickHouseColumn.create(name, ch_type.name)
                 for name, ch_type in zip(query_result.column_names, query_result.column_types)
diff --git a/dbt/adapters/clickhouse/nativeclient.py b/dbt/adapters/clickhouse/nativeclient.py
index aaec97f..f62ac27 100644
--- a/dbt/adapters/clickhouse/nativeclient.py
+++ b/dbt/adapters/clickhouse/nativeclient.py
@@ -35,7 +35,7 @@ class ChNativeClient(ChClientWrapper):
     def columns_in_query(self, sql: str, **kwargs) -> List[ClickHouseColumn]:
         try:
             _, columns = self._client.execute(
-                f"SELECT * FROM ({sql}) LIMIT 0", with_column_types=True
+                f"SELECT * FROM ({sql}) WHERE FALSE LIMIT 0", with_column_types=True
             )
             return [ClickHouseColumn.create(column[0], column[1]) for column in columns]
         except clickhouse_driver.errors.Error as ex:
